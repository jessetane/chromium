// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto2";
package foo.bar;

// This file contains comprehensive set of supported message structures and
// data types. Unit tests depends on the plugin-processed version of this file.

enum SmallEnum {
  TO_BE = 1;
  NOT_TO_BE = 0;
}

enum SignedEnum {
  POSITIVE = 1;
  NEUTRAL = 0;
  NEGATIVE = -1;
}

enum BigEnum {
  BEGIN = 10;
  END = 100500;
}

message EveryField {
  optional int32 field_int32 = 1;
  optional int64 field_int64 = 2;
  optional uint32 field_uint32 = 3;
  optional uint64 field_uint64 = 4;
  optional sint32 field_sint32 = 5;
  optional sint64 field_sint64 = 6;
  optional fixed32 field_fixed32 = 7;
  optional fixed64 field_fixed64 = 8;
  optional sfixed32 field_sfixed32 = 9;
  optional sfixed64 field_sfixed64 = 10;
  optional float field_float = 11;
  optional double field_double = 12;
  optional bool field_bool = 13;

  optional SmallEnum small_enum = 51;
  optional SignedEnum signed_enum = 52;
  optional BigEnum big_enum = 53;

  optional string field_string = 500;
  optional bytes field_bytes = 505;

  enum NestedEnum {
    PING = 1;
    PONG = 2;
  }
  optional NestedEnum nested_enum = 600;

  repeated int32 repeated_int32 = 999;
}

message NestedA {
  message NestedB {
    message NestedC {
      optional int32 value_c = 1;
    }
    optional NestedC value_b = 1;
  }
  repeated NestedB repeated_a = 2;
}
